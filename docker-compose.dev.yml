version: "3"

services:
  bot:
    build:
      context: .
      dockerfile: ./Dockerfile.bot
    restart: always
    env_file:
      - .env
    networks:
      - app
    depends_on:
      - postgres
      - redis
    volumes:
      - ./TG/bot:/usr/src/app/bot
      - ./TG/migrations:/usr/src/app/migrations

  sender:
    build:
      context: .
      dockerfile: ./Dockerfile.sender
    restart: always
    env_file:
      - .env
    networks:
      - app
    depends_on:
      - postgres
      - redis
    volumes:
      - ./TG/sender:/usr/src/app/sender

#  worker-api:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.v1
#    restart: no
#    ports:
#      - "8000:8000"
#    env_file:
#      - .env
#    networks:
#      - app
#    depends_on:
#      - postgres
#      - redis
#    volumes:
#      - ./ML/v1:/usr/src/app/v1

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PG_SHARED_BUFFERS: "1GB"
      PG_WORK_MEM: "16MB"
      PG_MAINTENANCE_WORK_MEM: "400MB"
      PG_EFFECTIVE_CACHE_SIZE: "2.5GB"
      PG_WAL_LEVEL: "logical"
      PG_WAL_BUFFERS: "16MB"
      PG_MIN_WAL_SIZE: "1GB"
      PG_MAX_WAL_SIZE: "2GB"
      PG_CHECKPOINT_TIMEOUT: "10min"
      PG_MAX_CONNECTIONS: "500"
      PG_MAX_WORKER_PROCESSES: "2"
      PG_MAX_PARALLEL_WORKERS_PER_GATHER: "1"
      PG_MAX_PARALLEL_WORKERS: "2"
      PG_RANDOM_PAGE_COST: "1.1"
      PG_LOG_STATEMENT: "all"
      PG_AUTOVACUUM: "on"
    networks:
      - app
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - app
    volumes:
      - redis-data:/bitnami/redis/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres-data: {}
  redis-data: {}
